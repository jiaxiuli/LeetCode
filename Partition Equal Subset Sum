/*
Given a non-empty array containing only positive integers,
find if the array can be partitioned into two subsets such that the sum of elements in both subsets is equal.
*/
class Solution {
    public boolean canPartition(int[] nums) {
        int sum = 0;
        for( int i = 0 ; i < nums.length ; i++ ){
            sum = sum + nums[i];
        }
        if( sum % 2 != 0 )
            return false;
        
        Arrays.sort(nums);
        int target = sum/2;
        for( int i = nums.length - 1 ; i >= 0 ; i-- ){
            if( target < nums[i] )
                return false;
            if( search(nums, i, target, 0) )
                return true;
            
        }
        return false;
    }
    
    public boolean search( int[] nums, int start, int target, int count){
        if( target == 0 && count < nums.length)
            return true;
        for( int i = start ; i >= 0 ; i-- ){
            if( target < nums[i] )
                return false;
            if( search(nums, i-1, target-nums[i], count+1))
                return true;
        }
        return false;
    }
}
